{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Rental API",
        "description": "REST API for Car Rental System",
        "contact": {
            "name": "API Support",
            "email": "admin@carrental.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "Car Rental API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Enregistre un nouvel utilisateur",
                "description": "Crée un nouvel utilisateur et retourne un token d'accès.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Inscription réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_access_token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreurs de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Connecte un utilisateur existant",
                "description": "Authentifie un utilisateur et retourne un token d'accès.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_access_token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Identifiants invalides",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Identifiants invalides"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Erreurs de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Déconnecte l'utilisateur actuel",
                "description": "Révoque le token d'accès de l'utilisateur authentifié.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Déconnexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Déconnexion réussie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Obtenir la liste de toutes les voitures",
                "description": "Retourne une liste paginée des voitures disponibles avec des filtres pour la marque et le prix",
                "operationId": "d8232bc6a16fec784f4a5fca541f9856",
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Filtrer les voitures par marque",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "description": "Filtrer les voitures dont le prix par jour est inférieur ou égal à la valeur fournie",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des voitures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Créer une voiture",
                "description": "Créer une voiture avec les informations données",
                "operationId": "724566c843f5b743f804f2be0147edde",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand",
                                    "model",
                                    "year",
                                    "price_per_day"
                                ],
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2023
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Voiture créée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Données invalides"
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Obtenir une voiture spécifique",
                "description": "Retourne les détails d'une voiture spécifique basé sur l'ID",
                "operationId": "8b43987d328663989329b7b6b01db674",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la voiture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Voiture trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voiture non trouvée"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Mettre à jour une voiture",
                "description": "Met à jour les informations d'une voiture spécifique",
                "operationId": "57f1d1b391a2b72602b04e54e0b7ae12",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la voiture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Camry"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2024
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 75
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Voiture mise à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Voiture non trouvée"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Supprimer une voiture",
                "description": "Supprime une voiture spécifique basé sur son ID",
                "operationId": "cf5c2cc6a255c64c21681b2ace173caa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la voiture",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Voiture supprimée avec succès"
                    },
                    "404": {
                        "description": "Voiture non trouvée"
                    }
                }
            }
        },
        "/payments/create-intent": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment intent",
                "operationId": "ec8c6d65976af692ad2d015d8e5bf837",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rental_id",
                                    "amount",
                                    "payment_method"
                                ],
                                "properties": {
                                    "rental_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 275
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "debit_card",
                                            "paypal",
                                            "cash"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment intent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clientSecret": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payments/confirm": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Confirm payment after intent",
                "operationId": "81859fcd1dcccfc57bc90e1537e5d8ec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_intent_id",
                                    "rental_id",
                                    "payment_method"
                                ],
                                "properties": {
                                    "payment_intent_id": {
                                        "type": "string",
                                        "example": "pi_3OqXyZKuReXqKZZp1gYQHhN5"
                                    },
                                    "rental_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "debit_card",
                                            "paypal",
                                            "cash"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rentals": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Obtenir la liste de toutes les locations",
                "description": "Retourne une liste paginée des locations avec des options de filtrage par utilisateur et voiture",
                "operationId": "1b9bef35feec6a3e04979f07a94036dd",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "ID de l'utilisateur pour filtrer les locations",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "car_id",
                        "in": "query",
                        "description": "ID de la voiture pour filtrer les locations",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Créer une nouvelle location",
                "description": "Créer une location avec les informations fournies",
                "operationId": "40394fe10e293c02112f075c41ccb537",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "car_id",
                                    "start_date",
                                    "end_date",
                                    "total_price"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "car_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-03-01T10:00:00"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-03-05T10:00:00"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location créée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Données invalides"
                    }
                }
            }
        },
        "/rentals/{id}": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Obtenir une location spécifique",
                "description": "Retourne une location spécifique basée sur son ID",
                "operationId": "0b23838f4234389c73c6ae96f8ad584d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location non trouvée"
                    }
                }
            },
            "put": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Mettre à jour une location",
                "description": "Met à jour les informations de la location basée sur l'ID",
                "operationId": "087e402c5db67fbb712d2fb46bda1a57",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "car_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-03-01T10:00:00"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-03-05T10:00:00"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 120.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location mise à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location non trouvée"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Supprimer une location",
                "description": "Supprime une location basée sur son ID",
                "operationId": "ee368812d5b66f57c6f0a14397baf489",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Location supprimée avec succès"
                    },
                    "404": {
                        "description": "Location non trouvée"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Payment": {
                "required": [
                    "rental_id",
                    "amount",
                    "payment_method",
                    "payment_date"
                ],
                "properties": {
                    "id": {
                        "description": "Payment ID",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "Payment amount",
                        "type": "number",
                        "format": "float"
                    },
                    "payment_date": {
                        "description": "Payment date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "rental_id": {
                        "description": "Rental ID",
                        "type": "integer"
                    },
                    "status": {
                        "description": "Payment status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Car": {
                "required": [
                    "brand",
                    "model",
                    "year",
                    "price_per_day"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Car ID",
                                "type": "integer"
                            },
                            "brand": {
                                "description": "Car brand",
                                "type": "string"
                            },
                            "model": {
                                "description": "Car model",
                                "type": "string"
                            },
                            "year": {
                                "description": "Year of manufacture",
                                "type": "integer"
                            },
                            "price_per_day": {
                                "description": "Price per day",
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Rental": {
                "required": [
                    "car_id",
                    "user_id",
                    "start_date",
                    "end_date",
                    "total_amount"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "properties": {
                            "id": {
                                "description": "Rental ID",
                                "type": "integer"
                            },
                            "car_id": {
                                "description": "Car ID",
                                "type": "integer"
                            },
                            "user_id": {
                                "description": "User ID",
                                "type": "integer"
                            },
                            "start_date": {
                                "description": "Start date of rental",
                                "type": "string",
                                "format": "date"
                            },
                            "end_date": {
                                "description": "End date of rental",
                                "type": "string",
                                "format": "date"
                            },
                            "total_amount": {
                                "description": "Total rental amount",
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Cars",
            "description": "API Endpoints for car management"
        },
        {
            "name": "Rentals",
            "description": "API Endpoints for rental management"
        },
        {
            "name": "Payments",
            "description": "Payment operations with Stripe integration"
        },
        {
            "name": "Authentification",
            "description": "Authentification"
        }
    ]
}